#
#
# 感谢p3terx大神的一键编译脚本
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#

name: build openwrt Yuncore SR3200

on: 
  workflow_dispatch:

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: 19.07
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/yuncore_sr3200.config
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    - name: Checkout
      uses: actions/checkout@main

    - name: Check disk space
      run: |
           echo "Free space:"
           df -h
           
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -y autoremove
        sudo -E apt-get autoclean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone src
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH --depth=1 --single-branch openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'mtk'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Update& Install feeds again
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load config
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        #chmod +x $DIY_P2_SH
        #cd openwrt
        #$GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download packages
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "STATUS=success" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Check storage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin to artifact
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Cleanup bin
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
        
    - name: Upload config to artifact
      if: env.STATUS == 'success' && env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@main
      with:
        name: config.buildinfo_${{ env.FILE_DATE }}
        path: ./config    
    
    - name: Upload firmware to artifact
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success' && !cancelled()
      with:
        name: yuncore-sr3200-openwrt
        path: ${{ env.FIRMWARE }}
        
    - name: Remove obsoleted artifacts
      uses: c-hive/gha-remove-artifacts@v1.3.0
      with:
        age: '1 day'
        skip-recent: 3
